package nro.models.npc_list;

import java.util.ArrayList;
import java.util.List;

import nro.models.consts.ConstDailyGift;
import nro.models.consts.ConstNpc;
import nro.models.consts.ConstPlayer;
import nro.models.consts.ConstTask;
import nro.models.consts.ConstTaskBadges;
import nro.models.daily_Giftcode.DailyGiftService;
import nro.models.database.PlayerDAO;
import nro.models.item.Item;
import nro.models.map.service.NpcService;
import nro.models.npc.Npc;
import nro.models.player.Player;
import nro.models.server.Maintenance;
import nro.models.services.InventoryService;
import nro.models.services.ItemService;
import nro.models.services.PetService;
import nro.models.services.Service;
import nro.models.services.TaskService;
import nro.models.services_func.Input;
import nro.models.shop.ShopService;
import nro.models.task.BadgesTaskService;
import nro.models.utils.Util;

public class OngGohan extends Npc {

    public OngGohan(int mapId, int status, int cx, int cy, int tempId, int avartar) {
        super(mapId, status, cx, cy, tempId, avartar);
    }

    @Override
    public void openBaseMenu(Player player) {
        if (canOpenNpc(player)) {
            if (!TaskService.gI().checkDoneTaskTalkNpc(player, this)) {
                this.createOtherMenu(player, ConstNpc.BASE_MENU,
                                "C·ªë G·∫Øng C√≥ L√†m M·ªõi C√≥ ƒÇn Con, ƒë·ª´ng lo l·∫Øng cho ta.\n"
                                        .replaceAll("%1", player.gender == ConstPlayer.TRAI_DAT ? "Quy l√£o Kam√™"
                                                : player.gender == ConstPlayer.NAMEC ? "Tr∆∞·ªüng l√£o Guru" : "Vua Vegeta") + "Ta ƒëang gi·ªØ ti·ªÅn ti·∫øt ki·ªám c·ªßa con\n hi·ªán t·∫°i con ƒëang c√≥: " + player.getSession().goldBar + " th·ªèi v√†ng",
                                "ƒê·ªïi th·ªèi\nv√†ng","ƒêi·ªÉm danh\nh√†ng ng√†y","K√≠ch ho·∫°t\n mi·ªÖn ph√≠", "Nh·∫≠n 200k ng·ªçc xanh", "Nh·∫≠n ƒë·ªá t·ª≠", "Nh·∫≠n v√†ng\nh√†nh trang", "Giftcode");

            }
        }
    }
           @Override
public void confirmMenu(Player player, int select) {
    if (canOpenNpc(player)) {
        // ====== BASE MENU ======
        if (player.idMark.isBaseMenu()) {
            switch (select) {
                case 0: {
                    String npcSay = "S·ªë d∆∞ c·ªßa con l√†: " + Util.mumberToLouis(player.getSession().vnd)
                            + " VND d√πng ƒë·ªÉ n·∫°p qua ƒë∆°n v·ªã kh√°c\n"
                            + "Ta ƒëang gi·ªØ gi√∫p con " + Util.mumberToLouis(player.getSession().goldBar)
                            + " th·ªèi v√†ng";
                    createOtherMenu(player, ConstNpc.DOI_TIEN_O_NHA, npcSay,
                            "N·∫°p v√†ng",
                            "Nh·∫≠n\nTh·ªèi v√†ng",
                            "ƒê√≥ng");
                    break;
                }
                case 1: { // ƒëi·ªÉm danh VND m·ªói ng√†y
                    if (player.getSession() == null) {
                        Service.gI().sendThongBao(player, "Kh√¥ng t√¨m th·∫•y phi√™n ƒëƒÉng nh·∫≠p!");
                        break;
                    }
                    if (!DailyGiftService.checkDailyGift(player, ConstDailyGift.NHAN_VND_MIEN_PHI)) {
                        Service.gI().sendThongBao(player, "H√¥m nay b·∫°n ƒë√£ nh·∫≠n VND mi·ªÖn ph√≠ r·ªìi, quay l·∫°i v√†o ng√†y mai nh√©!");
                        break;
                    }
                    int soTienVND = 10_000;
                    player.getSession().vnd += soTienVND;
                    PlayerDAO.saveVnd(player);
                    DailyGiftService.updateDailyGift(player, ConstDailyGift.NHAN_VND_MIEN_PHI);
                    Service.gI().sendMoney(player);
                    Service.gI().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n " + Util.numberFormatLouis(soTienVND) + " VND v√†o s·ªë d∆∞");
                    break;
                }
                case 2:
                    if (!player.getSession().actived) {
                        boolean ok = PlayerDAO.updateActivated(player, true);
                        if (ok) {
                            player.getSession().actived = true;        
                            Service.gI().sendMoney(player);
                            Service.gI().sendThongBao(player, "|7|K√≠ch ho·∫°t th√†nh c√¥ng");
                        } else {
                            this.npcChat(player, "L·ªói l∆∞u d·ªØ li·ªáu, th·ª≠ l·∫°i sau nh√©!");
                        }
                    } else {
                        this.npcChat(player, "B·∫°n ƒë√£ m·ªü th√†nh vi√™n r·ªìi!");
                    }
                    break;

                case 3:
                                if (player.inventory.gem == 200000) {
                                    this.npcChat(player, "Tham Lam");
                                    break;
                                }
                                player.inventory.gem = 200000;
                                Service.gI().sendMoney(player);
                                Service.gI().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 200K ng·ªçc xanh");
                                break;
                case 4:
                                if (player.pet == null) {
                                    PetService.gI().createNormalPet(player);
                                    Service.gI().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒë·ªá t·ª≠");
                                } else {
                                    this.npcChat(player, "B·∫°n ƒë√£ c√≥ ƒë·ªá t·ª≠ r·ªìi");
                                }
                                break;
                case 5:
                                // if (Maintenance.isRunning) {
                                //     break;
                                // }
                                // if (player.getSession().goldBar > 0) {
                                //     if (InventoryService.gI().getCountEmptyBag(player) > 0) {
                                //         int quantity = player.getSession().goldBar;
                                //         if (PlayerDAO.subGoldBar(player, player.getSession().goldBar)) {
                                //             Item goldBar = ItemService.gI().createNewItem((short) 457, quantity);
                                //             InventoryService.gI().addItemBag(player, goldBar);
                                //             InventoryService.gI().sendItemBags(player);
                                //             this.npcChat(player, "Ta ƒë√£ g·ª≠i " + quantity + " th·ªèi v√†ng v√†o h√†nh trang c·ªßa con\n con h√£y ki·ªÉm tra ");
                                //         } else {
                                //             this.npcChat(player, "L·ªói vui l√≤ng b√°o admin...");
                                //         }
                                //     } else {
                                //         this.npcChat(player, "H√£y ch·ª´a cho ta 1 √¥ tr·ªëng");
                                //     }
                                // } else {
                                //     this.npcChat(player, "Con ƒëang kh√¥ng c√≥ th·ªèi v√†ng h√£y ib √¥ng tr√πm ƒë·ªÉ n·∫°p th·∫ª t·ª± ƒë·ªông nhanh g·ªçn kh√¥ng chi·∫øt kh·∫•u, gi√° v√†ng c·ª±c r·∫ª");
                                // }
                                // break;

                                  if (player.inventory.gold == 20000000000L) {
                                    this.npcChat(player, "Tham Lam");
                                    break;
                                }
                                player.inventory.gold = 2000000000;
                                Service.gI().sendMoney(player);
                                Service.gI().sendThongBao(player, "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c 2 t·ª∑ v√†ng");
                                break;
                case 6:
                                Input.gI().createFormGiftCode(player);
                                break;
            }
        }

        // ====== ƒê·ªîI TI·ªÄN ·ªû NH√Ä ======
        else if (player.idMark.getIndexMenu() == ConstNpc.DOI_TIEN_O_NHA) {
            final int costNapVang = 1;
            final int[][] napVang = {
                {20000, 40}, {50000, 105}, {100000, 250},
                {500000, 1500}, {1000000, 3100}, {2000000, 6500}, {5000000, 17000}
            };
            switch (select) {
                case 0: { // m·ªü danh s√°ch m·ªëc n·∫°p
                    java.util.List<String> menu = new java.util.ArrayList<>();
                    for (int i = 0; i < napVang.length; i++) {
                        menu.add(
                            Util.numberFormatLouis(napVang[i][0]) + " VND\n" +
                            Util.numberFormatLouis(napVang[i][1] * costNapVang) + " th·ªèi v√†ng"
                        );
                    }
                    menu.add("‚óÄ Quay l·∫°i");
                    createOtherMenu(player, ConstNpc.NAP_VANG_MENU, "Ch·ªçn m·ªëc n·∫°p nh√© c∆∞ng~ üíõ",
                            menu.toArray(new String[0]));
                    break;
                }
                case 1: { // nh·∫≠n th·ªèi v√†ng t·ª´ kho v√†o h√†nh trang
                    if (Maintenance.isRunning) break;
                    if (player.getSession().goldBar <= 0) {
                        this.npcChat(player, "Con kh√¥ng c√≥ th·ªèi v√†ng n√†o trong kho ƒë·ªÉ nh·∫≠n c·∫£~");
                        break;
                    }
                    if (InventoryService.gI().getCountEmptyBag(player) < 1) {
                        this.npcChat(player, "H√£y ch·ª´a cho ta 1 √¥ tr·ªëng trong h√†nh trang nha~");
                        break;
                    }
                    int quantity = player.getSession().goldBar;
                    Item goldBarItem = ItemService.gI().createNewItem((short) 457, quantity);
                    InventoryService.gI().addItemBag(player, goldBarItem);
                    InventoryService.gI().sendItemBags(player);
                    if (PlayerDAO.subGoldBar(player, quantity)) {
                        this.npcChat(player, "Ta ƒë√£ g·ª≠i " + quantity + " th·ªèi v√†ng v√†o h√†nh trang c·ªßa con r·ªìi ƒë√≥~");
                    } else {
                        this.npcChat(player, "C√≥ l·ªói khi c·∫≠p nh·∫≠t kho th·ªèi v√†ng, b√°o admin nh√©!");
                    }
                    break;
                }
                case 2: { // ƒê√≥ng
                    break;
                }
            }
        }

        // ====== SUBMENU N·∫†P V√ÄNG ======
        else if (player.idMark.getIndexMenu() == ConstNpc.NAP_VANG_MENU) {
            final int costNapVang = 1;
            final int[][] napVang = {
                {20000, 40}, {50000, 105}, {100000, 250},
                {500000, 1500}, {1000000, 3100}, {2000000, 6500}, {5000000, 17000}
            };

            int backIndex = napVang.length; // n√∫t "‚óÄ Quay l·∫°i"
            if (select == backIndex) {
                String npcSay = "S·ªë d∆∞ c·ªßa con l√†: " + Util.numberFormatLouis(player.getSession().vnd)
                        + " VND d√πng ƒë·ªÉ n·∫°p qua ƒë∆°n v·ªã kh√°c\n"
                        + "Ta ƒëang gi·ªØ gi√∫p con " + Util.numberFormatLouis(player.getSession().goldBar)
                        + " th·ªèi v√†ng";
                createOtherMenu(player, ConstNpc.DOI_TIEN_O_NHA, npcSay, "N·∫°p v√†ng", "Nh·∫≠n\nTh·ªèi v√†ng", "ƒê√≥ng");
                return;
            }
            if (select < 0 || select >= napVang.length) return;

            int vndCost  = napVang[select][0];
            int goldBars = napVang[select][1] * costNapVang;

            if (player.getSession().vnd < vndCost) {
                Service.gI().sendThongBao(player, "S·ªë d∆∞ kh√¥ng ƒë·ªß. C·∫ßn " + Util.numberFormatLouis(vndCost) + " VND nha~");
                return;
            }

            // tr·ª´ VND + l∆∞u DB
            player.getSession().vnd -= vndCost;
            PlayerDAO.saveVnd(player);

            // c·ªông th·ªèi v√†ng v√†o kho
            if (!PlayerDAO.addGoldBar(player, goldBars)) {
                // rollback n·∫øu l·ªói
                player.getSession().vnd += vndCost;
                PlayerDAO.saveVnd(player);
                Service.gI().sendThongBao(player, "C√≥ l·ªói khi c·ªông th·ªèi v√†ng, giao d·ªãch ƒë√£ ho√†n l·∫°i!");
                return;
            }

            Service.gI().sendMoney(player);
            Service.gI().sendThongBao(player,
                "N·∫°p " + Util.numberFormatLouis(vndCost) + " VND th√†nh c√¥ng ‚Üí nh·∫≠n "
              + Util.numberFormatLouis(goldBars) + " th·ªèi v√†ng üíõ");
        }

        // ====== QU√Ä T√ÇN TH·ª¶ ======
        else if (player.idMark.getIndexMenu() == ConstNpc.QUA_TAN_THU) {
            // ... ph·∫ßn c·ªßa anh ·ªü ƒë√¢y, gi·ªØ nguy√™n ...
        }

        // ====== C√ÅC MENU KH√ÅC ======
        else if (player.idMark.getIndexMenu() == ConstNpc.NAP_THE) {
            Input.gI().createFormNapThe(player, (byte) select);
        }
    }
}

}
    
  
